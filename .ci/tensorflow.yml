pr:
  branches:
    include:
      - master
  paths:
    include:
      - .ci/tensorflow.yml

resources:
  repositories:
    - repository: tensorflow/tensorflow
      type: github
      name: tensorflow/tensorflow
      ref: refs/tags/v2.1.0-rc1
      endpoint: GitHub

    - repository: compnerd/tensorflow
      type: github
      name: compnerd/tensorflow
      ref: refs/heads/v2.1.0-win-backports
      endpoint: GitHub

trigger:
  paths:
    include:
      - .ci/tensorflow.yml

jobs:
  - job: darwin
    pool:
      vmImage: 'macos-10.14'
    timeoutInMinutes: 240
    steps:
      - task: DownloadGitHubRelease@0
        displayName: download bazel
        inputs:
          connection: GitHub
          userRepository: bazelbuild/bazel
          defaultVersionType: specificVersion
          version: '19882193'
          itemPattern: bazel-*-darwin-x86_64
          downloadPath: $(Agent.ToolsDirectory)/bazel/0.29.1/x64

      - task: Bash@3
        displayName: rename bazel
        inputs:
          targetType: 'inline'
          script: |
            mv $(Agent.ToolsDirectory)/bazel/0.29.1/x64/bazel-0.29.1-darwin-x86_64 $(Agent.ToolsDirectory)/bazel/0.29.1/x64/bazel
            chmod +x $(Agent.ToolsDirectory)/bazel/0.29.1/x64/bazel

      - task: Bash@3
        displayName: add bazel to PATH
        inputs:
          targetType: 'inline'
          script: |
            echo "##vso[task.prependpath]$(Agent.ToolsDirectory)/bazel/0.29.1/x64"

      - checkout: self
        displayName: checkout compnerd/swift-build

      - checkout: tensorflow/tensorflow
        displayName: checkout tensorflow/tensorflow

      - task: UsePythonVersion@0
        displayName: configure python
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
        name: python

      - task: Bash@3
        displayName: install numpy, six
        inputs:
          targetType: 'inline'
          script: |
            python -m pip install --upgrade pip
            python -m pip install -U numpy six

      - task: Bash@3
        displayName: configure tensorflow
        inputs:
          targetType: 'inline'
          script: |
            PYTHON_BIN_PATH=$(which python) USE_DEFAULT_PYTHON_LIB_PATH=1 TF_ENABLE_XLA=1 TF_NEED_CUDA=0 TF_NEED_OPENCL_SYCL=0 TF_NEED_ROCM=0 TF_NEED_CUDA=0 TF_DOWNLOAD_CLANG=0 CC_OPT_FLAGS="-march=native -Wno-sign-compare" TF_SET_ANDROID_WORKSPACE=0 TF_CONFIGURE_IOS=1 python configure.py
          workingDirectory: $(Build.SourcesDirectory)/tensorflow

      - task: Bash@3
        displayName: build tensorflow
        inputs:
          targetType: 'inline'
          script: |
            bazel --output_user_root $(Agent.BuildDirectory)/caches/bazel/tensorflow build --config opt --define framework_shared_object=false //tensorflow:libtensorflow.so
          workingDirectory: $(Build.SourcesDirectory)/tensorflow

      - task: Bash@3
        displayName: install tensorflow
        inputs:
          targetType: 'inline'
          script: |
            install_name_tool -id @rpath/libtensorflow.dylib $(Build.SourcesDirectory)/tensorflow/bazel-out/darwin-opt/bin/tensorflow/libtensorflow.so.2.1.0

            mkdir -v -p $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/{include,lib}
            cp -v $(Build.SourcesDirectory)/tensorflow/bazel-out/darwin-opt/bin/tensorflow/libtensorflow.so.2.1.0 $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/lib/libtensorflow.dylib
            mkdir -v -p $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/c_api.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/c_api_experimental.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/tf_attrtype.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/tf_datatype.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/tf_file_statistics.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/tf_status.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/tf_tensor.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c
            mkdir -v -p $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c/eager
            cp -v $(Build.SourcesDirectory)/tensorflow/tensorflow/c/eager/c_api.h $(Build.StagingDirectory)/tensorflow-darwin-x64/Library/tensorflow-2.1.0-rc1/usr/include/tensorflow/c/eager

      - publish: $(Build.StagingDirectory)/tensorflow-darwin-x64
        artifact: tensorflow-darwin-x64

  - job: windows
    pool: Google
    steps:
      - task: DownloadGitHubRelease@0
        displayName: download bazel
        inputs:
          connection: GitHub
          userRepository: bazelbuild/bazel
          defaultVersionType: specificVersion
          version: '19882193'
          itemPattern: bazel-*-windows-x86_64.exe
          downloadPath: $(Agent.ToolsDirectory)/bazel/0.29.1/x64

      - task: CmdLine@2
        displayName: rename bazel
        inputs:
          script: |
            move "$(Agent.ToolsDirectory)\bazel\0.29.1\x64\bazel-0.29.1-windows-x86_64.exe" "$(Agent.ToolsDirectory)\bazel\0.29.1\x64\bazel.exe"

      - task: CmdLine@2
        displayName: add bazel to PATH
        inputs:
          script: |
            echo ##vso[task.prependpath]$(Agent.ToolsDirectory)\bazel\0.29.1\x64

      - checkout: self
        displayName: checkout compnerd/swift-build

      - checkout: tensorflow/tensorflow
        displayName: checkout tensorflow/tensorflow
        enabled: false

      - checkout: compnerd/tensorflow
        displayName: checkout compnerd/tensorflow

      - task: UsePythonVersion@0
        displayName: configure python
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
        name: python

      - task: CmdLine@2
        displayName: configure python
        enabled: false
        inputs:
          script: |
            echo ##vso[task.prependpath]%ProgramFiles(x86)%\Microsoft Visual Studio\Shared\Python37_64

      - task: CmdLine@2
        displayName: configure GNU tools path
        inputs:
          script: |
            echo ##vso[task.prependpath]%ProgramFiles%\Git\usr\bin

      - task: CmdLine@2
        displayName: install numpy, six
        inputs:
          script: |
            python -m pip install --upgrade pip
            python -m pip install --user numpy six

      - task: CmdLine@2
        displayName: configure tensorflow
        inputs:
          script: |
            set TF_ENABLE_XLA=1
            set TF_NEED_ROCM=0
            set TF_NEED_CUDA=0
            set TF_CUDA_COMPUTE_CAPABILITIES=7.5
            set CC_OPT_FLAGS="/arch:AVX /D_USE_MATH_DEFINES"
            set TF_OVERRIDE_EIGEN_STRONG_INLINE=1

            .\configure.cmd
          workingDirectory: $(Build.SourcesDirectory)/tensorflow

      - task: BatchScript@1
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: vsvarsall.bat
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=x64 -host_arch=x64
          modifyEnvironment: true

      - task: CmdLine@2
        displayName: build tensorflow
        inputs:
          script: |
            set BAZEL_SH=%ProgramFiles%\Git\usr\bin\bash.exe
            set BAZEL_VC=%VCINSTALLDIR%

            bazel --output_user_root $(Agent.BuildDirectory)/caches/bazel/tensorflow build -c opt --copt /D_USE_MATH_DEFINES --define framework_shared_object=false --config short_logs //tensorflow:tensorflow //tensorflow:tensorflow_dll_import_lib
          workingDirectory: $(Build.SourcesDirectory)/tensorflow

      - task: CmdLine@2
        displayName: shutdown bazel
        inputs:
          script: |
            bazel --output_user_root $(Agent.BuildDirectory)/caches/bazel/tensorflow shutdown
          workingDirectory: $(Build.SourcesDirectory)/tensorflow

      - task: CmdLine@2
        displayName: install tensorflow
        inputs:
          script: |
            md $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\bin
            copy $(Build.SourcesDirectory)\tensorflow\bazel-out\x64_windows-opt\bin\tensorflow\tensorflow.dll $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\bin\
            md $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\lib
            copy $(Build.SourcesDirectory)\tensorflow\bazel-out\x64_windows-opt\bin\tensorflow\tensorflow.lib $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\lib\
            md $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\c_api.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\c_api_experimental.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\tf_attrtype.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\tf_datatype.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\tf_file_statistics.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\tf_status.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\tf_tensor.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\
            md $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\eager
            copy $(Build.SourcesDirectory)\tensorflow\tensorflow\c\eager\c_api.h $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\include\tensorflow\c\eager\
            md $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\share
            copy $(Build.SourcesDirectory)\tensorflow\bazel-out\x64_windows-opt\bin\tensorflow\tensorflow_filtered_def_file.def $(Build.StagingDirectory)\tensorflow-windows-x64\Library\tensorflow-2.1.0-rc1\usr\share\

      - publish: $(Build.StagingDirectory)/tensorflow-windows-x64
        artifact: tensorflow-windows-x64
