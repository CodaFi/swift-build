# parameters:
# arch: [ 'armv7' | 'aarch64' ]
# host: [ 'arm64' | 'x64' ]
# platform: [ 'android' | 'win' ]

jobs:
  - job: ${{ parameters.platform }}_${{ parameters.host }}
    variables:
      sqlite.version: 3.28.0
      install.directory: $(Build.StagingDirectory)\Library\sqlite-$(sqlite.version)
      sqlite.release: 3280000
    pool:
      vmImage: 'windows-2019'
    steps:
      - powershell: |
          Invoke-WebRequest -UseBasicParsing -Uri https://sqlite.org/2019/sqlite-amalgamation-$(sqlite.release).zip -OutFile $(Build.SourcesDirectory)\sqlite-amalgamation-$(sqlite.release).zip
          New-Item -Path $(Build.SourcesDirectory)\sqlite-amalgamation-$(sqlite.release) -ItemType Directory
          Copy-Item -Path $(Build.SourcesDirectory)\cmake\SQLite\CMakeLists.txt -Destination $(Build.SourcesDirectory)\sqlite-amalgamation-$(sqlite.release)\CMakeLists.txt
        displayName: 'Download Sources'
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: $(Build.SourcesDirectory)\sqlite-amalgamation-$(sqlite.release).zip
          destinationFolder: $(Build.SourcesDirectory)
          cleanDestinationFolder: false
        displayName: 'Extract Sources'
      - task: BatchScript@1
        inputs:
          filename: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\Tools\\VsDevCmd.bat
          arguments: -no_logo -arch=${{ parameters.host }} -host_arch=x64
          modifyEnvironment: true
        condition: ${{ eq( variables['Agent.OS'], 'Windows_NT' ) }}
        displayName: 'vcvarsall.bat'
      - task: CMake@1
        inputs:
          workingDirectory: $(Build.StagingDirectory)\sqlite
          cmakeArgs: $(Build.SourcesDirectory)\sqlite-amalgamation-$(sqlite.release) -G Ninja -DCMAKE_C_COMPILER=cl -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=$(install.directory)\usr -DBUILD_SHARED_LIBS=NO
        condition: ${{ eq( parameters['platform'], 'win' ) }}
        displayName: 'Configure SQLite3 (windows)'
      - task: CMake@1
        inputs:
          workingDirectory: $(Build.StagingDirectory)\sqlite
          cmakeArgs: $(Build.SourcesDirectory)\sqlite-amalgamation-$(sqlite.release) -G Ninja -C $(Build.SourcesDirectory)\cmake\caches\android-${{ parameters.arch }}.cmake -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=$(install.directory)\usr -DBUILD_SHARED_LIBS=NO
        condition: ${{ eq( parameters['platform'], 'android' ) }}
        displayName: 'Configure SQLite3 (android)'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)\sqlite
        displayName: 'Build SQLite3'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)\sqlite --target install
        displayName: 'Install SQLite3'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.StagingDirectory)\Library
          artifactName: sqlite-${{ parameters.platform }}-${{ parameters.host }}