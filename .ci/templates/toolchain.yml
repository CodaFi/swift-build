# parameters:
# host: [ 'x64' ]
# platform: [ 'linux' | 'win' ]

jobs:
  - job: ${{ parameters.platform }}_${{ parameters.host }}
    # NOTE(compnerd) this is an open source project built on hosted machines, so
    # this time out is actually 6 hours.  Sadly, this is not very long given the
    # complexity of this build and the speed of the hosted machines
    timeoutInMinutes: 0
    steps:
      - script: |
          git config --global user.name 'root'
          git config --global user.email 'root@compnerd.org'

          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-cmark cmark
          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-llvm llvm

          # NOTE(compnerd) this cannot be a shallow clone since we need to go back in time to around
          # when the branch was cut
          git clone --quiet --single-branch https://github.com/llvm-mirror/lld lld
          # NOTE(compnerd) This corresponds to SVN r350253 which is the commit closes to SVN r350374
          # where the current stable branch was cut.
          git -C lld checkout 997d79fe31b96246ca4ef54cb082a8ec0d756ede

          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-lldb lldb
          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-clang clang
          git clone --config core.autocrlf=false --config core.symlinks=true --quiet --depth 1 --single-branch https://github.com/apple/swift swift
          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-corelibs-libdispatch swift-corelibs-libdispatch
        displayName: 'Fetch Sources'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: specific
          project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
          pipeline: 9
          allowPartiallySucceededBuilds: true
          artifactName: 'icu-${{ parameters.platform }}-${{ parameters.host }}'
          downloadPath: '$(System.ArtifactsDirectory)'
        displayName: 'Download/Install ICU4C'
      - task: BatchScript@1
        inputs:
          filename: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/Common7/Tools/VsDevCmd.bat
          arguments: -no_logo -arch=x64 -host_arch=x64
          modifyEnvironment: true
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: 'vcvarsall.bat'
      - script: python -m pip install --upgrade flake8
        displayName: 'Install flake8'
