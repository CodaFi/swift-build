name: 'Windows SDK'
variables:
  install.directory: $(Build.StagingDirectory)\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk\usr
jobs:
  - job: windows
    timeoutInMinutes: 0
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - checkout: none
      - script: |
          git config --global user.name 'builder'
          git config --global user.email 'root@compnerd.org'

          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-corelibs-libdispatch swift-corelibs-libdispatch
          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-corelibs-foundation swift-corelibs-foundation
          git clone --quiet --depth 1 --single-branch https://github.com/apple/swift-corelibs-xctest swift-corelibs-xctest

          git clone --quiet --depth 1 --single-branch https://gitlab.gnome.org/GNOME/libxml2.git libxml2
          git clone --quiet --depth 1 --single-branch https://github.com/curl/curl.git curl
        displayName: 'Fetch Sources'
      - powershell: |
          (New-Object System.Net.WebClient).DownloadFile("http://download.icu-project.org/files/icu4c/63.1/icu4c-63_1-Win64-MSVC2017.zip", "$(Build.StagingDirectory)\\icu4c-63_1-Win64-MSVC2017.zip")
          Add-Type -A System.IO.Compression.FileSystem
          [IO.Compression.ZipFile]::ExtractToDirectory("$(Build.StagingDirectory)\\icu4C-63_1-Win64-MSVC2017.zip", "$(Build.StagingDirectory)\\icu-63.1")
      - task: BatchScript@1
        inputs:
          filename: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\VsDevCmd.bat
          arguments: -no_logo -arch=x64
          modifyEnvironment: true
        displayName: 'vsvarsall.bat'
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '2.7.x'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: specific
          project: '3133d6ab-80a8-4996-ac4f-03df25cd3224'
          pipeline: 1
          allowPartiallySucceededBuilds: true
          artifactName: 'toolchain'
          downloadPath: '$(System.ArtifactsDirectory)'
        displayName: 'Download/Install toolchain'
      - script: |
          echo "##vso[task.setvariable variable=PATH]$(System.ArtifactsDirectory)\\toolchain\\Developer\\Toolchains\\unknown-Asserts-development.xctoolchain\\usr\\bin;%PATH%"
        displayName: 'Update PATH'
      - task: CMake@1
        inputs:
          workingDirectory: $(Build.StagingDirectory)\libdispatch
          cmakeArgs: $(Build.SourcesDirectory)\swift-corelibs-libdispatch -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_SWIFT_COMPILER=swiftc -DCMAKE_INSTALL_PREFIX=$(install.directory) -DENABLE_TESTING=NO -DENABLE_SWIFT=YES
        displayName: 'Configure libdispatch'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)\libdispatch
        displayName: 'Build libdispatch'
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)\libdispatch --target install
        displayName: 'Install libdispatch'
      - script: |
          cd $(Build.SourcesDirectory)\libxml2\win32
          cscript configure.js iconv=no
          nmake /f Makefile.msvc
        displayName: 'build libxml2'
      - script: |
          cd $(Build.SourcesDirectory)\curl
          cmd /c .\buildconf.bat
          cd winbuild
          cd
          nmake /f Makefile.vc mode=static VC=15 MACHINE=x64 GEN_PDB=yes
        displayName: 'build curl'
      - script: |
          dir "$(Build.SourcesDirectory)/curl/builds/libcurl-vc15-x64-release-static-ipv6-sspi-winssl/include"
      - task: CMake@1
        inputs:
          workingDirectory: $(Build.StagingDirectory)\\foundation
          cmakeArgs: cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang-cl -DCMAKE_LINKER=link -DCMAKE_SWIFT_COMPILER=swiftc.exe -DCURL_LIBRARY="$(Build.SourcesDirectory)/curl/builds/libcurl-vc15-x64-release-static-ipv6-sspi-winssl/lib/libcurl_a.lib" -DCURL_INCLUDE_DIR="$(Build.SourcesDirectory)/curl/builds/libcurl-vc15-x64-release-static-ipv6-sspi-winssl/include" -DICU_ROOT="$(Build.StagingDirectory)\\icu-63.1" -DLIBXML2_LIBRARY="$(Build.SourcesDirectory)/libxml2/win32/bin.msvc/libxml2_a.lib" -DLIBXML2_INCLUDE_DIR="$(Build.SourcesDirectory)/libxml2/include" -DFOUNDATION_PATH_TO_LIBDISPATCH_SOURCE=$(Build.SourcesDirectory)\\swift-corelibs-libdispatch -DFOUNDATION_PATH_TO_LIBDISPATCH_BUILD=$(Build.StagingDirectory)\\libdispatch $(Build.SourcesDirectory)\\swift-corelibs-foundation
        displayName: 'Configure Foundation'
      - script: |
          cd $(Build.StagingDirectory)\foundation
          type build.ninja
      - task: CMake@1
        inputs:
          cmakeArgs: --build $(Build.StagingDirectory)\foundation
        continueOnError: true
        displayName: 'Build Foundation'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.StagingDirectory)\Library
          artifactName: sdk
